{
	"nodes":[
		{"id":"80b1a6fdf79e7654","x":-1100,"y":-240,"width":820,"height":820,"type":"group","label":"Business Context"},
		{"id":"ab785c1cfa3ca984","type":"group","x":-1440,"y":-460,"width":410,"height":167,"label":"Http apiÂ "},
		{"id":"05a72c3ec9cbbd28","x":-380,"y":700,"width":290,"height":180,"type":"group","label":"Ecto/Postgres Data Layer"},
		{"id":"424e30a889f92387","type":"text","text":"Post **/send** --> POST /webhooks/sms","x":-1410,"y":-440,"width":350,"height":60},
		{"id":"51765f804ef3f9fa","type":"text","text":"Get /conv/id --> POST /webhooks/email","x":-1420,"y":-373,"width":370,"height":60},
		{"id":"52583ffab304def3","type":"text","text":"messaging: sends and receives messages \n\n```elixir\ndef send_message(attrs) do \n\t\twith {:ok, conv} <- Conversations.find_or_create(attrs.from, attrs.to), \n\t\t\t{:ok, prov_resp} <- Providers.dispatch(attrs), \n\t\t\t{:ok, msg} <- Conversations.add_message(conv, attrs, prov_resp) do \n\t\t{:ok, msg} \n\tend \nend\n```","x":-1100,"y":-240,"width":660,"height":260},
		{"id":"fb9cfe7742f211fa","x":-1050,"y":40,"width":635,"height":240,"type":"text","text":"conversations: groups by participants \n- Handles grouping by participants (from + to normalization)\n- Providers query interfaces\n```elixir\nConversations.get_conversation_by_participants(from, to) Conversations.list_messages(conversation_id)\n```"},
		{"id":"71e4d38efa580e21","x":-360,"y":740,"width":250,"height":60,"type":"text","text":"Messages "},
		{"id":"4db9352795a70f58","x":-360,"y":800,"width":250,"height":60,"type":"text","text":"Conversations "},
		{"id":"6bdb8e6cabd80405","x":-1000,"y":300,"width":640,"height":160,"type":"text","text":"providers: abstracts  Twilo/sendgrid\n"}
	],
	"edges":[
		{"id":"dbaca0dba0d96884","fromNode":"ab785c1cfa3ca984","fromSide":"right","toNode":"80b1a6fdf79e7654","toSide":"left"},
		{"id":"c407964d77aeec45","fromNode":"80b1a6fdf79e7654","fromSide":"bottom","toNode":"05a72c3ec9cbbd28","toSide":"left"}
	]
}